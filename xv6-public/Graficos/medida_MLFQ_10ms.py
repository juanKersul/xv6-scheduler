import numpy as np

# MLFQ 10ms Escenario 0 (por defecto).
    #Notar las mediciones de iobench comienzan con io, las de cpu con cpu respectivamente.
    # 50 mediciones

# Caso 0: 1 iobench

io1_1_cpu0_10ms_MLFQ = [ 3456, 3378, 3365, 3378, 3456, 3464, 3456, 3328, 3648, 3378,
                         3378, 3456, 3619, 3378, 3520, 3338, 3456, 3520, 3478, 3314,
                         3428, 3492, 3392, 3365, 3275, 3378, 3520, 3500, 3365, 3351,
                         3351, 3584, 3442, 3450, 3428, 3428, 3351, 3527, 3520, 3428,
                         3619, 3415, 3351, 3527, 3456, 3351, 3464, 3505, 3351, 3478]


# Caso 1: 1 iobench 1 cpubench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida}
cpu1_1_io1_1_10ms_MLFQ = [ 372, 370, 370, 374, 364, 372, 372, 374, 369, 372,
                           364, 370, 372, 364, 365, 369, 364, 374, 371, 368,
                           364, 366, 364, 366, 370, 370, 372, 372, 365, 366,
                           367, 362, 376, 356, 362, 377, 356, 352, 362, 349,
                           350, 373, 355, 358, 353, 358, 355, 352, 360, 353]

io1_1_cpu1_1_10ms_MLFQ = [ 184, 125, 192, 130, 125, 190, 125, 240, 125, 130,
                           125, 124, 125, 135, 125, 168, 125, 140, 134, 125,
                           160, 125, 133, 125, 186, 125, 216, 124, 216, 125,
                           219, 125, 166, 125, 155, 125, 124, 125, 214, 125,
                           150, 125, 180, 125, 162, 125, 166, 125, 143, 130]

# Caso 2: 1 iobench 2 cpubench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida}
cpu2_1_io1_10ms_MLFQ = [ 17, 16, 16, 13, 12, 20, 14, 18, 32, 11,
                         9, 14, 17, 16, 16, 13, 12, 20, 14, 18,
                         12, 18, 12, 17, 16, 16, 20, 20, 9, 16,
                         9, 9, 18, 16, 16, 13, 12, 16, 14, 18,
                         32, 14, 17, 16, 20, 14, 12, 20, 14, 14]

cpu2_2_io1_10ms_MLFQ = [ 358, 354, 312, 372, 356, 339, 348, 359, 331, 355,
                         342, 362, 348, 320, 338, 337, 350, 337, 357, 345,
                         333, 328, 348, 342, 332, 330, 356, 342, 339, 326,
                         320, 335, 321, 293, 343, 341, 328, 331, 358, 317,
                         314, 336, 333, 324, 345, 338, 332, 341, 337, 330]

io1_1_cpu2_2_10ms_MLFQ = [ 247, 201, 213, 306, 361, 141, 176, 178, 305, 249,
                           299, 250, 195, 245, 221, 296, 238, 176, 248, 265,
                           258, 170, 238, 222, 190, 430, 227, 235, 222, 341,
                           231, 302, 198, 347, 200, 233, 250, 245, 224, 287,
                           276, 267, 237, 372, 188, 234, 214, 354, 232, 278]

# Caso 3: 1 cpubench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida} si nº de io/cpu es cero no lo colocamos en el nombre.
cpu1_1_io0_10ms_MLFQ = [ 401, 397, 401, 401, 394, 401, 392, 404, 399, 404,
                         402, 403, 397, 397, 397, 397, 400, 393, 394, 395,
                         394, 403, 397, 397, 397, 397, 399, 397, 397, 396,
                         397, 397, 397, 403, 397, 399, 393, 397, 396, 397,
                         398, 399, 392, 392, 393, 393, 394, 395, 393, 393]

# Caso 4: 1 cpubench 2 iobench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida}
cpu1_1_io2_2_10ms_MLFQ = [ 301, 293, 316, 291, 314, 298, 311, 293, 301, 293,
                           300, 285, 282, 307, 290, 301, 284, 292, 265, 288,
                           278, 287, 288, 273, 275, 272, 269, 285, 294, 285,
                           292, 281, 291, 301, 288, 275, 283, 287, 273, 284,
                           290, 291, 301, 273, 299, 283, 280, 298, 273, 273]

io2_1_cpu1_1_10ms_MLFQ = [ 878, 508, 770, 622, 471, 182, 452, 579, 659, 259,
                           386, 276, 637, 551, 313, 186, 503, 464, 461, 421,
                           481, 817, 216, 680, 229, 483, 621, 535, 488, 768,
                           320, 345, 291, 424, 259, 286, 292, 376, 594, 647,
                           432, 484, 411, 483, 488, 393, 500, 597, 658, 560]

io2_2_cpu1_1_10ms_MLFQ = [ 885, 576, 888, 1000, 727, 611, 608, 937, 603, 984,
                           483, 690, 690, 1259, 980, 360, 622, 944, 490, 793,
                           671, 405, 1018, 586, 1160, 829, 592, 1160, 871, 956,
                           1154, 829, 1030, 452, 597, 668, 626, 977, 560, 564,
                           835, 501, 1050, 571, 442, 1075, 1178, 1245, 601, 744]

# Caso 5: 2 cpubench 2 iobench

cpu2_1_io2_2_10ms_MLFQ = [ 179, 198, 204, 199, 221, 216, 212, 192, 188, 248,
                           209, 233, 210, 200, 197, 198, 211, 207, 185, 209,
                           212, 194, 210, 214, 218, 217, 221, 216, 213, 203,
                           210, 224, 208, 174, 215, 169, 209, 207, 212, 212,
                           201, 204, 255, 212, 216, 206, 203, 148, 216, 214]

cpu2_2_io2_2_10ms_MLFQ = [ 187, 237, 206, 224, 221, 207, 209, 203, 220, 225,
                           180, 207, 194, 229, 217, 228, 219, 226, 240, 219,
                           220, 226, 207, 216, 236, 194, 219, 218, 218, 219,
                           231, 226, 216, 207, 254, 210, 242, 191, 233, 224,
                           220, 223, 250, 205, 227, 180, 214, 214, 225, 338]

io2_1_cpu2_2_10ms_MLFQ = [ 85, 68, 155, 75, 377, 42, 84, 82, 78, 258,
                           85, 172, 120, 51, 361, 257, 88, 179, 152, 229,
                           78, 167, 199, 133, 125, 287, 71, 312, 94, 72,
                           308, 161, 88, 284, 71, 139, 303, 89, 162, 96,
                           77, 71, 62, 164, 306, 121, 32, 147, 40, 110]

io2_2_cpu2_2_10ms_MLFQ = [60 ,112, 69, 266, 90, 163, 113, 93, 125, 25,
                          207, 219, 125, 197, 79, 235, 125, 160, 105, 105,
                          79, 192, 43, 107, 34, 290, 113, 142, 207, 169,
                          150, 114, 95, 106, 123, 34, 309, 224, 91, 208,
                          115, 32, 65, 149, 137, 185, 207, 163, 86, 112]

# Caso 6: 2 cpubench

cpu2_1_io0_10ms_MLFQ = [ 202, 182, 219, 231, 228, 230, 229, 231, 230, 229,
                         230, 231, 229, 231, 231, 228, 227, 228, 229, 231,
                         230, 232, 228, 231, 230, 230, 229, 230, 231, 231,
                         232, 229, 230, 229, 230, 231, 230, 229, 228, 229,
                         229, 228, 230, 229, 227, 226, 228, 228, 228, 230]

cpu2_2_io0_10ms_MLFQ = [ 201, 183, 219, 230, 229, 230, 230, 232, 234, 234,
                         233, 230, 233, 232, 233, 231, 228, 229, 231, 231,
                         232, 233, 230, 232, 232, 233, 231, 234, 233, 233,
                         233, 232, 232, 231, 230, 233, 231, 231, 229, 231,
                         231, 230, 232, 231, 230, 228, 228, 228, 230, 231]

# Caso 7: 2 iobench

io2_1_cpu0_10ms_MLFQ = [ 3059, 2793, 3059, 3137, 3648, 2816, 2645, 3249, 2857, 2937,
                         2613, 3111, 3174, 3072, 2816, 2804, 3123, 3392, 2741, 2741,
                         3136, 3112, 2330, 2812, 2793, 3782, 2972, 3346, 2500, 3056,
                         2996, 2613, 2782, 2603, 3555, 2730, 2863, 2447, 2476, 3392,
                         2232, 2560, 3936, 2793, 2456, 3123, 2294, 2944, 2452, 2897]

io2_2_cpu0_10ms_MLFQ = [ 3338, 3936, 3264, 3492, 4032, 4141, 3520, 3824, 3520, 3812,
                         3424, 3658, 4928, 2422, 3250, 3392, 3712, 4126, 4063, 3521,
                         3596, 3720, 2926, 3328, 4063, 3187, 3936, 2562, 3653, 3840,
                         3739, 3351, 2996, 3388, 3378, 3250, 4143, 4190, 2886, 3746,
                         3776, 3428, 4000, 3952, 3428, 3079, 3456, 3890, 3187, 3162]




def cpubench_10msMLFQ():
    
    cpu2io0_10msMLFQ = [(x+y)/2 for x,y in zip(cpu2_1_io0_10ms_MLFQ,cpu2_2_io0_10ms_MLFQ)]
    cpu2io1_10msMLFQ = [(x+y)/2 for x,y in zip(cpu2_1_io1_10ms_MLFQ,cpu2_2_io1_10ms_MLFQ)]
    cpu2io2_10msMLFQ = [(x+y)/2 for x,y in zip(cpu2_1_io2_2_10ms_MLFQ,cpu2_2_io2_2_10ms_MLFQ)]
    
    cpuμ_10msMLFQ = [np.mean(cpu1_1_io0_10ms_MLFQ),np.mean(cpu1_1_io1_1_10ms_MLFQ),np.mean(cpu1_1_io2_2_10ms_MLFQ),
                       np.mean(cpu2io0_10msMLFQ),np.mean(cpu2io1_10msMLFQ),np.mean(cpu2io2_10msMLFQ)]

    return cpuμ_10msMLFQ

    
def iobench_10msMLFQ():
      
    io2cpu0_10msMLFQ= [(x+y)/2 for x,y in zip(io2_1_cpu0_10ms_MLFQ,io2_2_cpu0_10ms_MLFQ)]
    io2cpu1_10msMLFQ= [(x+y)/2 for x,y in zip(io2_1_cpu1_1_10ms_MLFQ,io2_2_cpu1_1_10ms_MLFQ)]
    io2cpu2_10msMLFQ= [(x+y)/2 for x,y in zip(io2_1_cpu2_2_10ms_MLFQ,io2_2_cpu2_2_10ms_MLFQ)]
    
    ioμ_10msMLFQ = [np.mean(io1_1_cpu0_10ms_MLFQ),np.mean(io1_1_cpu1_1_10ms_MLFQ),np.mean(io2cpu1_10msMLFQ),
                np.mean(io2cpu0_10msMLFQ),np.mean(io1_1_cpu2_2_10ms_MLFQ),np.mean(io2cpu2_10msMLFQ)]

    return ioμ_10msMLFQ

cpuμ_10msMLFQ = cpubench_10msMLFQ()
ioμ_10msMLFQ = iobench_10msMLFQ()





























