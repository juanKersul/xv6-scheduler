import numpy as np

# MLFQ 1ms Escenario 0 (por defecto).
    #Notar las mediciones de iobench comienzan con io, las de cpu con cpu respectivamente.
    # 50 mediciones

# Caso 0: 1 iobench

io1_1_cpu0_1ms_MLFQ = [3197, 3321, 3318, 3180, 3109, 3254, 3226, 3406, 3423, 3175,
                       3313, 3321, 3254, 3310, 3132, 3254, 3257, 3271, 3314, 3295,
                       3317, 3169, 3252, 3172, 3289, 3253, 3279, 3398, 3276, 3003,
                       3217, 3253, 3197, 3196, 3273, 3108, 3178, 3179, 3224, 3326,
                       3134, 3132, 3215, 3127, 3174, 3361, 3280, 3322, 3200, 3435]


# Caso 1: 1 iobench 1 cpubench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida}
cpu1_1_io1_1_1ms_MLFQ = [ 13, 12, 12, 12, 12, 12, 12, 12, 11, 12,
                          12, 11, 12, 12, 11, 12, 12, 12, 11, 12,
                          12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                          12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                          12, 12, 12, 12, 12, 12, 12, 13, 12, 11]

io1_1_cpu1_1_1ms_MLFQ = [ 2039, 2139, 2065, 2039, 2016, 2127, 2069, 2019, 2161, 2081,
                          2145, 2180, 2115, 2019, 2172, 2112, 2111, 2097, 1915, 2048,
                          1993, 2043, 2114, 2110, 2145, 2060, 2143, 2043, 1968, 2029,
                          2030, 2077, 2056, 2105, 1969, 2138, 2086, 2046, 2161, 2169,
                          2122, 2020, 2056, 1989, 2086, 2159, 2120, 2157, 2029, 2013]

# Caso 2: 1 iobench 2 cpubench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida}
cpu2_1_io1_1ms_MLFQ = [ 11, 11, 13, 13, 13, 13, 13, 12, 13, 13,
                        12, 13, 13, 12, 14, 13, 12, 14, 13, 13,
                        13, 13, 13, 13, 13, 13, 13, 13, 13, 12,
                        12, 13, 12, 13, 13, 12, 12, 12, 13, 13,
                        12, 12, 13, 13, 13, 13, 12, 13, 13, 13]

cpu2_2_io1_1ms_MLFQ = [  2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                         2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                         2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                         2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                         2, 2, 2, 2, 2, 2, 2, 2, 2, 2]

io1_1_cpu2_2_1ms_MLFQ = [ 2098, 1822, 1935, 2007, 1788, 1951, 1849, 1918, 1782, 1945,
                          1900, 1916, 1847, 1908, 1910, 1806, 1836, 1824, 1965, 1864,
                          1920, 1859, 1957, 1891, 1913, 1947, 1864, 1874, 1895, 1939,
                          1891, 2005, 1892, 1853, 1878, 1934, 1900, 1792, 1833, 1896,
                          1842, 1906, 1849, 1896, 1847, 1848, 1819, 1910, 1983, 1948]

# Caso 3: 1 cpubench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida} si nº de io/cpu es cero no lo colocamos en el nombre.
cpu1_1_io0_1ms_MLFQ = [ 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                        35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                        35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                        35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                        35, 35, 35, 35, 35, 35, 35, 35, 35, 35]

# Caso 4: 1 cpubench 2 iobench
        #Formato de nombre : cpu{nº cpus}_{nº de cpu medida}_io{nº de ios}_{nº de io medida}
cpu1_1_io2_2_1ms_MLFQ = [9, 9, 9, 8, 8, 8, 8, 8, 8, 8,
                         9, 9, 9, 8, 8, 8, 8, 8, 8, 8,
                         9, 9, 9, 8, 8, 8, 8, 8, 8, 8,
                         9, 9, 9, 8, 8, 8, 8, 8, 8, 8,
                         9, 9, 9, 8, 8, 8, 8, 8, 8, 8]

io2_1_cpu1_1_1ms_MLFQ = [1825, 1840, 1642, 1747, 1698, 1478, 1894, 2091, 1717, 1677,
                          1611, 1736, 1787, 1650, 1630, 1743, 1767, 1788, 1773, 1714,
                          1670, 1614, 1684, 1662, 1772, 1819, 1848, 1459, 1719, 1877,
                          1870, 1647, 1741, 1767, 1690, 1875, 1831, 1750, 1725, 1854,
                          1826, 1796, 1719, 1723, 1907, 1681, 1863, 1765, 1615, 1689]

io2_2_cpu1_1_1ms_MLFQ = [2082, 1886, 1953, 1748, 1965, 1914, 2075, 1883, 1876, 1940,
                          2043, 2081, 1937, 1866, 1992, 1775, 1905, 2091, 1978, 1907,
                          1997, 1888, 1801, 2023, 1853, 2010, 2001, 1798, 2046, 1897,
                          1960, 2120, 1812, 2102, 1947, 2183, 1833, 1979, 1984, 2027,
                          1875, 2117, 1942, 2055, 2152, 1976, 2037, 2151, 1946, 2038]

# Caso 5: 2 cpubench 2 iobench

cpu2_1_io2_2_1ms_MLFQ = [6, 7, 7, 6, 6, 6, 6, 7, 7, 6,
                          6, 7, 7, 6, 6, 6, 6, 7, 7, 6,
                          6, 7, 7, 6, 6, 6, 6, 7, 7, 6,
                          6, 7, 7, 6, 6, 6, 6, 7, 7, 6,
                          6, 7, 7, 6, 6, 6, 6, 7, 7, 6]

cpu2_2_io2_2_1ms_MLFQ = [9, 9, 10, 10, 9, 9, 9, 9, 9, 9,
                          9, 9, 10, 9, 9, 9, 10, 9, 9, 9, 
                          9, 10, 9, 9, 9, 9, 10, 9, 9, 9, 
                          10, 9, 9, 9, 9, 10, 9, 9, 9, 10, 
                          9, 9, 10, 9, 9, 9, 9, 9, 10, 9]

io2_1_cpu2_2_1ms_MLFQ = [1178, 1307, 1184, 1407, 1188, 1379, 1318, 1185, 1216, 1201,
                         1212, 1300, 1202, 1374, 1277, 1289, 1276, 1251, 1309, 1176,
                         1274, 1308, 1192, 1242, 1186, 1261, 1256, 1191, 1343, 1184,
                         1256, 1300, 1112, 1320, 1324, 1197, 1412, 1189, 1210, 1364,
                         1228, 1171, 1191, 1280, 1080, 1185, 1319, 1284, 1235, 1232]

io2_2_cpu2_2_1ms_MLFQ = [1401, 1528, 1371, 1579, 1396, 1518, 1444, 1449, 1595, 1544,
                         1533, 1363, 1452, 1509, 1577, 1561, 1480, 1327, 1574, 1373,
                         1501, 1470, 1495, 1488, 1533, 1319, 1371, 1260, 1564, 1568,
                         1321, 1372, 1368, 1459, 1386, 1383, 1482, 1424, 1385, 1571,
                         1448, 1389, 1508, 1596, 1246, 1389, 1480, 1466, 1433, 1501]

# Caso 6: 2 cpubench

cpu2_1_io0_1ms_MLFQ = [19, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                        20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                        20, 19, 20, 20, 20, 20, 20, 20, 20, 20,
                        20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                        20, 20, 20, 20, 20, 20, 20, 19, 20, 20]

cpu2_2_io0_1ms_MLFQ = [18, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                        20, 20, 20, 20, 20, 20, 20, 20, 20, 19,
                        18, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                        20, 20, 20, 20, 20, 20, 20, 20, 20, 19,
                        20, 20, 20, 20, 20, 19, 18, 20, 20, 20]

# Caso 7: 2 iobench

io2_1_cpu0_1ms_MLFQ = [2301, 2219, 2089, 2151, 2292, 2405, 2281, 2073, 2472, 2194,
                       2108, 2718, 2426, 2282, 2432, 2161, 2273, 2265, 2292, 2211,
                       2163, 2285, 2167, 2184, 2248, 2129, 2266, 2301, 2368, 2175,
                       2287, 2328, 2219, 2182, 2380, 2251, 2168, 2274, 2341, 2348,
                       2401, 2319, 2291, 2299, 2292, 2281, 2260, 2427, 2771, 2209]

io2_2_cpu0_1ms_MLFQ = [2749, 2477, 2540, 2508, 2629, 2860, 2556, 2390, 2791, 2685,
                       2753, 2327, 2611, 2823, 2785, 2598, 2613, 2583, 2641, 2587,
                       2430, 2657, 2619, 2762, 2705, 2675, 2854, 2589, 2897, 2739,
                       2352, 2732, 2489, 2468, 2811, 2568, 2569, 2575, 2823, 2842,
                       2704, 2779, 2620, 2609, 2664, 2684, 2677, 2731, 2272, 2592]




def cpubench_1msMLFQ():
    
    cpu2io0_1msMLFQ = [(x+y)/2 for x, y in zip(cpu2_1_io0_1ms_MLFQ, cpu2_2_io0_1ms_MLFQ)]
    cpu2io1_1msMLFQ = [(x+y)/2 for x, y in zip(cpu2_1_io1_1ms_MLFQ, cpu2_2_io1_1ms_MLFQ)]
    cpu2io2_1msMLFQ = [(x+y)/2 for x, y in zip(cpu2_1_io2_2_1ms_MLFQ, cpu2_2_io2_2_1ms_MLFQ)]
    
    cpuμ_1msMLFQ = [np.mean(cpu1_1_io0_1ms_MLFQ), np.mean(cpu1_1_io1_1_1ms_MLFQ), np.mean(cpu1_1_io2_2_1ms_MLFQ),
                       np.mean(cpu2io0_1msMLFQ), np.mean(cpu2io1_1msMLFQ), np.mean(cpu2io2_1msMLFQ)]

    return cpuμ_1msMLFQ

    
def iobench_1msMLFQ():
      
    io2cpu0_1msMLFQ = [(x+y)/2 for x, y in zip(io2_1_cpu0_1ms_MLFQ, io2_2_cpu0_1ms_MLFQ)]
    io2cpu1_1msMLFQ = [(x+y)/2 for x, y in zip(io2_1_cpu1_1_1ms_MLFQ, io2_2_cpu1_1_1ms_MLFQ)]
    io2cpu2_1msMLFQ = [(x+y)/2 for x, y in zip(io2_1_cpu2_2_1ms_MLFQ, io2_2_cpu2_2_1ms_MLFQ)]
    
    ioμ_1msMLFQ = [np.mean(io1_1_cpu0_1ms_MLFQ), np.mean(io1_1_cpu1_1_1ms_MLFQ), np.mean(io2cpu1_1msMLFQ),
                np.mean(io2cpu0_1msMLFQ), np.mean(io1_1_cpu2_2_1ms_MLFQ), np.mean(io2cpu2_1msMLFQ)]

    return ioμ_1msMLFQ

cpuμ_1msMLFQ = cpubench_1msMLFQ()
ioμ_1msMLFQ = iobench_1msMLFQ()





























